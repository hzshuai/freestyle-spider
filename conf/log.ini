# 定义logger模块，root是父类，必需存在的，其它的是自定义。
# logging.getLogger(NAME)便相当于向logging模块注册了一种日志打印
# name 中用 . 表示 log 的继承关系
[loggers]
keys=root,test

[handlers]
keys=consoleHandler,fileInfoHandler,fileErrorHandler,notifyHandler

[formatters]
keys=simpleFormatter

[formatter_simpleFormatter]
format=[%(asctime)s][%(threadName)s][%(filename)s:%(lineno)d][%(levelname)s] - %(message)s
datefmt='%Y-%m-%d %H:%M:%S'

#--------------------------------------------------
# 实现上面定义的logger模块，必需是[logger_xxxx]这样的形式
#--------------------------------------------------
# [logger_xxxx] logger_模块名称
# level     级别，级别有DEBUG、INFO、WARNING、ERROR、CRITICAL
# handlers  处理类，可以有多个，用逗号分开
# qualname  logger名称，应用程序通过 logging.getLogger获取。对于不能获取的名称，则记录到root模块。
# propagate 是否继承父类的log信息，0:否 1:是

[logger_root]
level=INFO
handlers=fileInfoHandler,fileErrorHandler,notifyHandler

[logger_test]
level=INFO
qualname=test
propagate=0
handlers=consoleHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

[handler_fileInfoHandler]
class=FileHandler
level=INFO
formatter=simpleFormatter
args=('logs/spider.log', 'a')

[handler_fileErrorHandler]
class=FileHandler
level=ERROR
formatter=simpleFormatter
args=('logs/error.log', 'a')

[handler_notifyHandler]
class=handlers.SMTPHandler
level=CRITICAL
formatter=simpleFormatter
# args handler初始化函数参数
args=(('smtp.163.com',25), 'goal_hzshuai@163.com', ['goal_hzshuai@163.com'], 'Crawler notification...', ('goal_hzshuai@163.com', 'Hzshuai123'))
